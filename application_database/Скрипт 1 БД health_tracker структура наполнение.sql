-- Cкрипты создания структуры БД 
-- Cкрипты наполнения БД данными



DROP DATABASE IF EXISTS health_tracker;
CREATE DATABASE health_tracker;
USE health_tracker;


-- Таблица с пользователями:

DROP TABLE IF EXISTS users;
CREATE TABLE users (
	id SERIAL, 
    firstname VARCHAR(50),
    lastname VARCHAR(50), 
    email VARCHAR(120) UNIQUE,
 	password_hash VARCHAR(100), 
	phone BIGINT UNSIGNED UNIQUE     
);

INSERT INTO users (firstname, lastname, email, password_hash, phone) VALUES
  ('Александр', 'Друзь', 'druzvamnegus@mail.ru', 'ru3ec2qkcq', '9818806432'),
  ('Борис', 'Белозёров', 'beloeozero@gmail.com', '3blhmdsu0h', '9487734102'),
  ('Алёна', 'Повышева', 'ladyinblack@mail.ru', 'gf7m09r59q', '9460085951'),
  ('Равшан', 'Аскеров', 'hochukrichu@rambler.ru', '9m4aarzrdm', '9835628313'),
  ('Andrey', 'Kozlov', 'brainring@gmail.com', 'ivvmqsab7r', '9213725519'),
  ('Балаш', 'Косумов', 'kosumov@gmail.com', 'sj7fbwj0v3', '9503215075'),
  ('Алесь', 'Мухин', 'zhivabude@mail.by', 'fyig380wjh', '9868205345'),
  ('Борис', 'Крюк', 'likeaboss@tvigra.ru', '62yf2bc7a6', '9486598394'),
  ('Ия', 'Метревели', 'goodbuyravshan@gmail.com', 'yj26umku37', '9213211750'),
  ('Денис', 'Галиакберов', 'prostoden@mail.ru', 't5r682fzht', '9758452846');


 
 -- Таблица с данными пользователя (пол, дата рождения, рост, вес, фото, город)
 
 DROP TABLE IF EXISTS profiles;
CREATE TABLE profiles (
	user_id BIGINT UNSIGNED NOT NULL UNIQUE,
    gender CHAR(1),
    birthday DATE,
    height TINYINT UNSIGNED NOT NULL,
    weight DECIMAL(6,3) UNSIGNED NOT NULL,
	photo_id BLOB,
    created_at DATETIME DEFAULT NOW(),
    hometown VARCHAR(100),
    FOREIGN KEY (user_id) REFERENCES users(id)
    ON UPDATE CASCADE 
    ON DELETE restrict
);

INSERT INTO profiles (user_id, gender, birthday, height, weight, hometown) VALUES
  (1, 'м', '1955-05-10', 172, 85.300, 'Санкт-Петербург'),
  (2, 'м', '1993-12-02', 164, 76.700, 'Санкт-Петербург'),
  (3, 'ж', '1987-12-23', 175, 60.200, 'Минск'),
  (4, 'м', '1972-05-04', 170, 81.000, 'Баку'),
  (5, 'м', '1960-12-25', 182, 96.900, 'Луганск'),
  (6, 'м', '1978-10-20', 180, 105.100, 'Баку'),
  (7, 'м', '1993-12-02', 182, 87.400, 'Минск'),
  (8, 'м', '1976-09-16', 176, 101.200, 'Москва'),
  (9, 'ж', '1974-10-04', 170, 85.500, 'Тбилиси'),
  (10, 'м', '1995-11-09', 187, 76.600, 'Казань');
 
 
 -- Таблица для отслеживания веса пользователя. 
 -- Данные вносятся один раз в день (или самые последние за этот день) по запросу пользователя (например, когда тот встаёт на весы).
 
DROP TABLE IF EXISTS weight_trackers; -- информация за день
CREATE TABLE weight_trackers (
	id SERIAL,
	user_id BIGINT UNSIGNED NOT NULL, 
    tracked_at DATE,
    weight DECIMAL(4,1) UNSIGNED,
    
    FOREIGN KEY (user_id) REFERENCES users(id)
);

INSERT INTO `weight_trackers` VALUES 
('1','4','2019-09-22','74.190'),
('2','6','2019-05-30','100.501'),
('3','10','2019-07-09','87.390'),
('4','2','2019-06-07','70.994'),
('5','7','2019-07-15','59.463'),
('6','1','2019-03-30','107.563'),
('7','2','2019-11-04','78.245'),
('8','1','2019-07-23','61.100'),
('9','1','2019-08-18','76.920'),
('10','5','2019-07-06','105.350'),
('11','7','2019-12-07','65.413'),
('12','8','2019-10-24','94.943'),
('13','4','2019-04-11','58.857'),
('14','6','2019-01-18','58.330'),
('15','8','2019-05-28','108.739'),
('16','1','2019-03-05','82.784'),
('17','5','2019-10-10','100.031'),
('18','9','2019-03-15','107.882'),
('19','10','2019-12-06','90.570'),
('20','1','2019-03-16','59.020'),
('21','9','2019-08-07','76.998'),
('22','5','2019-05-03','81.118'),
('23','5','2019-03-25','88.977'),
('24','5','2019-02-09','87.199'),
('25','4','2019-04-25','62.000'),
('26','6','2019-03-01','100.973'),
('27','7','2019-06-04','88.500'),
('28','5','2019-12-09','60.694'),
('29','9','2019-06-16','62.300'),
('30','2','2019-11-29','105.000'),
('31','1','2019-09-20','86.830'),
('32','9','2019-10-13','65.514'),
('33','5','2019-09-27','107.646'),
('34','7','2019-05-27','86.707'),
('35','10','2019-12-27','82.899'),
('36','10','2019-01-13','64.040'),
('37','3','2019-02-09','98.966'),
('38','9','2019-04-19','99.700'),
('39','3','2019-01-28','67.523'),
('40','6','2019-08-16','62.280'),
('41','5','2019-03-04','64.383'),
('42','9','2019-03-11','85.089'),
('43','7','2019-07-28','86.321'),
('44','5','2019-10-19','102.000'),
('45','6','2019-12-13','62.000'),
('46','10','2019-10-12','60.100'),
('47','1','2019-01-20','73.120'),
('48','3','2019-04-26','95.000'),
('49','4','2019-07-02','64.688'),
('50','1','2019-11-25','97.976');



-- Таблица для отслеживания сна пользователя.
-- Данные передаются один раз в день, например, с браслета: время засыпания, время пробуждения, время глубокого сна, время легкого сна, время REM-сна.
-- Следующие поля расчитываются через дополнительные функции или процедуры: общее время сна, процент глубокого сна, процент легкого сна, процент REM-сна.

DROP TABLE IF EXISTS sleep_trackers;
CREATE TABLE sleep_trackers (
	id SERIAL,
	user_id BIGINT UNSIGNED NOT NULL, 
    tracked_at DATETIME DEFAULT NOW(),
    fell_asleep TIME,
    woke_up TIME,
    total_sleep_time TIME,
    total_deep_sleep TIME,
    proportion_deep_sleep DECIMAL(5,2) UNSIGNED,
    total_light_sleep TIME,
    proportion_light_sleep DECIMAL(5,2) UNSIGNED,
    total_REM_sleep TIME,
    proportion_REM_sleep DECIMAL(5,2) UNSIGNED,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

INSERT INTO `sleep_trackers` VALUES 
('1','4','2019-04-11 09:23:01','20:53:49','05:56:26',NULL,'02:25:55',NULL,'02:48:43',NULL,'02:16:41',NULL),
('2','9','2019-01-28 01:24:49','01:49:13','03:39:53',NULL,'02:18:47',NULL,'02:57:05',NULL,'02:40:53',NULL),
('3','1','2019-09-13 04:56:17','19:51:48','07:05:17',NULL,'02:22:45',NULL,'02:13:29',NULL,'02:36:16',NULL),
('4','1','2019-11-18 23:29:36','03:22:51','00:12:46',NULL,'02:50:09',NULL,'02:57:25',NULL,'02:05:12',NULL),
('5','9','2019-02-02 16:31:00','01:00:20','19:47:46',NULL,'02:48:54',NULL,'02:21:05',NULL,'02:39:43',NULL),
('6','4','2019-10-27 06:47:10','14:54:39','12:30:15',NULL,'02:00:53',NULL,'02:59:40',NULL,'02:41:56',NULL),
('7','1','2019-06-12 08:55:32','22:28:39','18:26:23',NULL,'02:30:09',NULL,'02:43:10',NULL,'02:51:31',NULL),
('8','7','2019-09-29 12:22:58','03:15:17','16:54:41',NULL,'02:54:19',NULL,'02:36:55',NULL,'02:23:49',NULL),
('9','9','2019-08-05 08:57:44','01:00:48','20:54:57',NULL,'02:28:59',NULL,'02:11:00',NULL,'02:05:52',NULL),
('10','3','2019-07-24 08:26:50','00:29:10','22:50:08',NULL,'02:07:52',NULL,'02:11:31',NULL,'02:29:57',NULL),
('11','4','2019-03-18 18:45:32','15:30:28','17:11:00',NULL,'02:34:40',NULL,'02:19:34',NULL,'02:00:10',NULL),
('12','9','2019-09-25 23:40:36','13:27:33','10:24:50',NULL,'02:40:00',NULL,'02:03:17',NULL,'02:33:01',NULL),
('13','9','2019-06-24 22:21:22','18:35:42','04:09:24',NULL,'02:36:29',NULL,'02:15:32',NULL,'02:59:37',NULL),
('14','8','2019-04-06 15:48:46','18:26:08','03:04:49',NULL,'02:40:45',NULL,'02:59:04',NULL,'02:00:43',NULL),
('15','9','2019-04-08 08:27:30','03:19:17','08:21:58',NULL,'02:02:32',NULL,'02:18:58',NULL,'02:50:52',NULL),
('16','7','2019-10-17 15:56:58','07:54:09','21:35:35',NULL,'02:28:34',NULL,'02:39:38',NULL,'02:55:32',NULL),
('17','2','2019-09-22 03:58:13','00:52:53','05:22:13',NULL,'02:53:46',NULL,'02:42:20',NULL,'02:19:35',NULL),
('18','5','2019-05-10 07:34:17','05:19:50','09:42:29',NULL,'02:38:33',NULL,'02:23:45',NULL,'02:02:44',NULL),
('19','6','2019-01-03 20:40:24','14:39:42','07:15:20',NULL,'02:45:25',NULL,'02:19:58',NULL,'02:06:23',NULL),
('20','5','2019-05-30 21:34:51','18:49:58','20:29:49',NULL,'02:45:06',NULL,'02:38:09',NULL,'02:15:00',NULL),
('21','1','2019-05-22 04:45:27','14:05:46','19:47:43',NULL,'02:56:10',NULL,'02:51:18',NULL,'02:47:30',NULL),
('22','7','2019-01-12 17:48:08','11:43:02','19:07:31',NULL,'02:26:52',NULL,'02:31:38',NULL,'02:19:35',NULL),
('23','6','2019-06-15 04:52:28','09:22:34','22:31:13',NULL,'02:31:17',NULL,'02:54:49',NULL,'02:30:34',NULL),
('24','3','2019-04-27 19:42:40','13:31:05','13:37:03',NULL,'02:41:46',NULL,'02:40:20',NULL,'02:43:17',NULL),
('25','3','2019-02-28 09:32:31','07:51:48','10:23:59',NULL,'02:13:00',NULL,'02:04:24',NULL,'02:01:36',NULL),
('26','8','2019-01-17 08:42:35','22:05:25','15:04:33',NULL,'02:20:52',NULL,'02:27:45',NULL,'02:43:52',NULL),
('27','6','2019-08-01 20:54:56','15:10:31','22:40:36',NULL,'02:40:48',NULL,'02:38:17',NULL,'02:34:15',NULL),
('28','9','2019-03-15 20:09:31','01:46:32','08:38:23',NULL,'02:45:31',NULL,'02:06:14',NULL,'02:43:59',NULL),
('29','6','2019-04-10 10:13:05','18:41:33','02:12:27',NULL,'02:48:56',NULL,'02:08:52',NULL,'02:07:15',NULL),
('30','2','2019-04-12 07:03:04','05:03:11','04:18:16',NULL,'02:51:12',NULL,'02:41:32',NULL,'02:14:25',NULL),
('31','9','2019-12-12 05:48:20','00:48:34','13:44:47',NULL,'02:25:06',NULL,'02:37:15',NULL,'02:27:54',NULL),
('32','1','2019-12-10 15:21:35','20:22:21','00:07:56',NULL,'02:42:05',NULL,'02:47:15',NULL,'02:49:09',NULL),
('33','8','2019-09-03 09:29:43','15:47:57','21:39:54',NULL,'02:19:56',NULL,'02:57:18',NULL,'02:37:09',NULL),
('34','8','2019-12-26 21:03:46','04:29:47','11:31:11',NULL,'02:36:53',NULL,'02:46:56',NULL,'02:44:53',NULL),
('35','4','2019-03-03 03:11:53','12:12:13','01:25:45',NULL,'02:59:05',NULL,'02:06:30',NULL,'02:49:06',NULL),
('36','3','2019-06-30 22:39:30','23:11:25','09:31:28',NULL,'02:05:55',NULL,'02:06:44',NULL,'02:34:48',NULL),
('37','10','2019-10-03 14:59:16','06:17:15','02:02:16',NULL,'02:36:59',NULL,'02:13:21',NULL,'02:36:21',NULL),
('38','8','2019-09-10 11:15:26','14:53:21','15:53:34',NULL,'02:59:37',NULL,'02:34:47',NULL,'02:47:01',NULL),
('39','8','2019-05-12 03:01:14','08:42:58','05:15:02',NULL,'02:10:44',NULL,'02:00:22',NULL,'02:16:55',NULL),
('40','5','2019-07-19 22:30:50','17:02:20','07:19:19',NULL,'02:28:38',NULL,'02:56:32',NULL,'02:47:45',NULL),
('41','9','2019-04-29 22:50:30','12:54:23','19:16:37',NULL,'02:40:35',NULL,'02:55:35',NULL,'02:28:51',NULL),
('42','10','2019-12-21 04:32:17','14:38:28','12:25:21',NULL,'02:16:21',NULL,'02:06:18',NULL,'02:27:14',NULL),
('43','4','2019-10-17 20:36:08','00:04:59','14:00:49',NULL,'02:42:12',NULL,'02:14:45',NULL,'02:49:26',NULL),
('44','8','2019-01-09 03:53:42','14:30:23','13:47:47',NULL,'02:10:57',NULL,'02:08:29',NULL,'02:59:48',NULL),
('45','2','2019-03-27 05:18:03','20:50:46','17:51:52',NULL,'02:40:10',NULL,'02:19:50',NULL,'02:18:27',NULL),
('46','8','2019-10-30 15:09:25','09:45:01','22:14:17',NULL,'02:19:55',NULL,'02:17:15',NULL,'02:10:43',NULL),
('47','6','2019-12-09 00:25:16','21:09:07','18:10:51',NULL,'02:56:24',NULL,'02:51:49',NULL,'02:06:06',NULL),
('48','3','2019-04-07 03:15:23','23:46:07','02:06:02',NULL,'02:16:19',NULL,'02:25:55',NULL,'02:45:12',NULL),
('49','9','2019-04-21 18:11:03','09:01:05','13:35:16',NULL,'02:33:34',NULL,'02:47:30',NULL,'02:09:52',NULL),
('50','4','2019-04-28 08:46:43','06:30:10','08:16:11',NULL,'02:45:09',NULL,'02:55:20',NULL,'02:15:58',NULL); 



-- Таблица для отслеживания пройденных за день шагов пользователя;
-- Данные хранятся в виде общего числа шагов за сутки. Передаются с браслета/телефона только количество шагов.
-- Рассчитываются через функции: дистанция, сожженые калории.

DROP TABLE IF EXISTS step_trackers;
CREATE TABLE step_trackers (
	id SERIAL,
	user_id BIGINT UNSIGNED NOT NULL, 
    tracked_at DATE,
    steps_number MEDIUMINT UNSIGNED,    
    distance MEDIUMINT UNSIGNED,
    calories MEDIUMINT UNSIGNED,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

INSERT INTO `step_trackers` VALUES 
('1','8','2019-01-10','8224',NULL,NULL),
('2','5','2019-09-25','10844',NULL,NULL),
('3','8','2019-03-16','4269',NULL,NULL),
('4','6','2019-07-03','4307',NULL,NULL),
('5','6','2019-02-04','7608',NULL,NULL),
('6','5','2019-07-29','11460',NULL,NULL),
('7','2','2019-06-25','7853',NULL,NULL),
('8','3','2019-06-18','6458',NULL,NULL),
('9','9','2019-03-22','11252',NULL,NULL),
('10','8','2019-09-30','7052',NULL,NULL),
('11','5','2019-01-08','11730',NULL,NULL),
('12','6','2019-05-11','8314',NULL,NULL),
('13','5','2019-04-08','11148',NULL,NULL),
('14','4','2019-03-18','5354',NULL,NULL),
('15','5','2019-03-16','9438',NULL,NULL),
('16','1','2019-04-05','9596',NULL,NULL),
('17','7','2019-10-06','5068',NULL,NULL),
('18','5','2019-03-16','11876',NULL,NULL),
('19','5','2019-12-05','6656',NULL,NULL),
('20','8','2019-06-25','10230',NULL,NULL),
('21','1','2019-01-08','5986',NULL,NULL),
('22','10','2019-01-04','7571',NULL,NULL),
('23','10','2019-01-30','8375',NULL,NULL),
('24','6','2019-05-02','6806',NULL,NULL),
('25','10','2019-05-21','9984',NULL,NULL),
('26','10','2019-04-22','9362',NULL,NULL),
('27','2','2019-11-04','11592',NULL,NULL),
('28','3','2019-10-24','9150',NULL,NULL),
('29','8','2019-07-30','8875',NULL,NULL),
('30','5','2019-05-04','7186',NULL,NULL),
('31','2','2019-07-11','11230',NULL,NULL),
('32','4','2019-01-10','10398',NULL,NULL),
('33','1','2019-01-23','7357',NULL,NULL),
('34','4','2019-11-19','8470',NULL,NULL),
('35','5','2019-09-08','11478',NULL,NULL),
('36','6','2019-03-09','4893',NULL,NULL),
('37','4','2019-04-06','5758',NULL,NULL),
('38','3','2019-07-12','9449',NULL,NULL),
('39','7','2019-05-22','6077',NULL,NULL),
('40','10','2019-02-27','5246',NULL,NULL),
('41','2','2019-09-21','5940',NULL,NULL),
('42','6','2019-01-09','6556',NULL,NULL),
('43','2','2019-08-21','7047',NULL,NULL),
('44','5','2019-08-16','6254',NULL,NULL),
('45','6','2019-12-11','7146',NULL,NULL),
('46','6','2019-08-30','9754',NULL,NULL),
('47','4','2019-05-14','8823',NULL,NULL),
('48','8','2019-07-23','7816',NULL,NULL),
('49','9','2019-08-17','6848',NULL,NULL),
('50','3','2019-09-28','4293',NULL,NULL);


-- Таблица для отслеживания пульса. 
-- Данные передаются по запросу пользователя (например, при измерении пульса браслетом) или с установленной регулярностью.

DROP TABLE IF EXISTS heart_rate_trackers;
CREATE TABLE heart_rate_trackers (
	id SERIAL,
	user_id BIGINT UNSIGNED NOT NULL, 
    tracked_at DATETIME,
    beats_per_minute TINYINT UNSIGNED,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

INSERT INTO `heart_rate_trackers` VALUES 
('1','6','2019-02-06 23:28:01','71'),
('2','7','2019-04-11 12:19:02','87'),
('3','6','2019-03-02 16:26:50','95'),
('4','5','2019-03-31 03:25:48','89'),
('5','8','2019-01-17 07:15:48','81'),
('6','8','2019-05-29 01:30:34','57'),
('7','8','2019-12-26 11:21:00','102'),
('8','5','2019-05-02 08:23:13','90'),
('9','2','2019-05-15 16:45:32','86'),
('10','2','2019-10-26 05:26:34','71'),
('11','1','2019-02-06 02:05:34','98'),
('12','4','2019-04-03 09:03:31','99'),
('13','1','2019-11-03 08:10:22','79'),
('14','1','2019-11-28 23:04:17','107'),
('15','5','2019-08-11 07:10:09','84'),
('16','5','2019-06-14 20:51:53','86'),
('17','9','2019-06-04 05:44:22','78'),
('18','1','2019-03-29 06:28:21','67'),
('19','8','2019-03-29 12:56:27','87'),
('20','10','2019-12-06 05:17:18','109'),
('21','9','2019-11-26 06:03:05','68'),
('22','5','2019-01-06 11:18:09','62'),
('23','1','2019-09-05 20:12:40','77'),
('24','9','2019-11-17 12:59:45','91'),
('25','8','2019-05-18 09:33:16','56'),
('26','10','2019-01-07 10:06:15','58'),
('27','7','2019-09-25 02:15:36','60'),
('28','6','2019-04-15 21:57:33','56'),
('29','8','2019-01-03 18:00:53','61'),
('30','2','2019-11-22 11:31:04','84'),
('31','10','2019-02-27 17:50:36','66'),
('32','8','2019-04-10 10:42:51','65'),
('33','3','2019-06-04 16:31:38','77'),
('34','10','2019-11-08 03:55:36','73'),
('35','7','2019-02-27 06:15:28','55'),
('36','2','2019-08-13 16:05:04','99'),
('37','10','2019-12-30 15:44:31','63'),
('38','5','2019-10-10 17:15:58','101'),
('39','6','2019-01-12 23:05:59','67'),
('40','2','2019-03-18 06:59:50','64'),
('41','6','2019-11-28 01:03:18','91'),
('42','10','2019-02-18 16:18:31','71'),
('43','5','2019-04-21 06:55:29','104'),
('44','6','2019-08-14 17:00:54','63'),
('45','7','2019-05-12 04:11:59','109'),
('46','2','2019-09-01 15:36:17','84'),
('47','5','2019-07-19 14:20:55','101'),
('48','8','2019-10-08 15:55:03','75'),
('49','5','2019-07-22 10:39:17','83'),
('50','3','2019-06-14 02:31:12','76'); 



-- Таблица для отслеживания количества выпитой за день воды.
-- Пользователь сам вносит данные через приложение.

DROP TABLE IF EXISTS water_trackers;
CREATE TABLE water_trackers (
	id SERIAL,
	user_id BIGINT UNSIGNED NOT NULL, 
    tracked_at DATETIME DEFAULT NOW(),
    water_amount DECIMAL(4,2) UNSIGNED,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

INSERT INTO `water_trackers` VALUES 
('1','2','2019-02-16','1.13'),
('2','5','2019-07-02','1.00'),
('3','5','2019-02-21','1.14'),
('4','5','2019-02-06','1.16'),
('5','2','2019-09-02','1.70'),
('6','8','2019-02-21','1.24'),
('7','3','2019-10-02','1.00'),
('8','10','2019-07-01','1.80'),
('9','9','2019-02-03','1.66'),
('10','6','2019-02-24','1.11'),
('11','3','2019-04-09','1.52'),
('12','2','2019-12-28','1.00'),
('13','6','2019-03-16','2.00'),
('14','4','2019-03-10','1.88'),
('15','10','2019-01-09','1.12'),
('16','8','2019-12-06','1.86'),
('17','5','2019-03-30','1.28'),
('18','6','2019-06-25','1.27'),
('19','9','2019-01-29','1.00'),
('20','7','2019-08-31','1.09'),
('21','1','2019-08-07','1.56'),
('22','9','2019-07-16','1.10'),
('23','4','2019-08-01','1.07'),
('24','2','2019-05-20','1.20'),
('25','1','2019-07-12','1.00'),
('26','9','2019-07-03','2.33'),
('27','9','2019-08-09','1.95'),
('28','1','2019-03-10','2.15'),
('29','9','2019-03-14','1.46'),
('30','2','2019-04-24','1.32'),
('31','4','2019-08-21','1.92'),
('32','10','2019-05-08','2.13'),
('33','6','2019-03-28','2.45'),
('34','5','2019-07-02','2.39'),
('35','2','2019-04-08','1.54'),
('36','2','2019-01-29','1.84'),
('37','7','2019-01-17','1.60'),
('38','8','2019-06-19','2.00'),
('39','7','2019-04-26','1.85'),
('40','6','2019-02-05','1.19'),
('41','4','2019-02-22','2.17'),
('42','6','2019-12-12','2.13'),
('43','8','2019-10-01','2.00'),
('44','1','2019-03-11','1.76'),
('45','1','2019-02-26','2.20'),
('46','2','2019-10-08','2.30'),
('47','8','2019-08-29','1.70'),
('48','8','2019-02-18','2.23'),
('49','7','2019-07-07','1.02'),
('50','8','2019-06-02','1.90');


-- Таблица с типом тренировок, предусмотренных приложением.

DROP TABLE IF EXISTS workout_types;
CREATE TABLE workout_types (
	id SERIAL,
    name VARCHAR(255), 
    created_at DATETIME DEFAULT NOW(),
    updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP        
);

INSERT INTO workout_types (name) VALUES
  ('бег'),
  ('вело'),
  ('лыжи'),
  ('плавание'),
  ('хайкинг'),
  ('зарядка'),
  ('силовая'),
  ('кардио'),
  ('растяжка'),
  ('йога');
 
 
 -- Таблица для отслеживания тренировок пользователя.
 -- Данные, которые передаются через приложение/браслет: id типа тренировки, общее время тренировки, дистанция (не всегда)
 -- Данные, которые расчитываются функцией: сожжёные калории.
 -- В день может быть несколько тренировок.

DROP TABLE IF EXISTS workouts;
CREATE TABLE workouts(
	id SERIAL,
	user_id BIGINT UNSIGNED NOT NULL,
    workout_types_id BIGINT UNSIGNED NOT NULL,
    tracked_at DATETIME DEFAULT NOW(),
    total_time TIME,
    distance MEDIUMINT UNSIGNED,
    calories MEDIUMINT UNSIGNED,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (workout_types_id) REFERENCES workout_types(id)
);

INSERT INTO `workouts` VALUES 
('1','2','3','2019-05-05','01:15:53',NULL,NULL),
('2','1','10','2019-04-05','01:46:43',NULL,NULL),
('3','4','1','2019-10-20','01:04:35',NULL,NULL),
('4','4','6','2019-02-15','01:58:23',NULL,NULL),
('5','9','9','2019-03-29','01:57:49',NULL,NULL),
('6','3','7','2019-04-21','01:24:07',NULL,NULL),
('7','8','1','2019-08-30','01:31:00',NULL,NULL),
('8','2','4','2019-02-27','01:42:23',NULL,NULL),
('9','1','4','2019-02-18','01:24:39',NULL,NULL),
('10','6','9','2019-07-03','01:33:58',NULL,NULL),
('11','9','7','2019-09-23','01:31:20',NULL,NULL),
('12','3','7','2019-03-02','01:23:58',NULL,NULL),
('13','2','7','2019-12-11','01:23:37',NULL,NULL),
('14','9','5','2019-03-17','01:53:33',NULL,NULL),
('15','4','6','2019-09-16','01:52:10',NULL,NULL),
('16','4','2','2019-06-10','01:47:57',NULL,NULL),
('17','10','7','2019-08-05','01:15:40',NULL,NULL),
('18','7','7','2019-06-01','01:28:22',NULL,NULL),
('19','8','8','2019-05-25','01:00:53',NULL,NULL),
('20','1','8','2019-03-27','01:55:43',NULL,NULL),
('21','6','7','2019-07-13','01:04:15',NULL,NULL),
('22','3','2','2019-01-05','01:01:46',NULL,NULL),
('23','8','2','2019-08-12','01:55:07',NULL,NULL),
('24','5','10','2019-04-20','01:09:40',NULL,NULL),
('25','2','2','2019-08-02','01:36:13',NULL,NULL),
('26','6','4','2019-09-21','01:01:02',NULL,NULL),
('27','10','3','2019-05-22','01:38:58',NULL,NULL),
('28','6','10','2019-12-07','01:08:33',NULL,NULL),
('29','9','8','2019-01-19','01:13:52',NULL,NULL),
('30','7','3','2019-10-21','01:51:05',NULL,NULL),
('31','1','9','2019-07-20','01:28:12',NULL,NULL),
('32','4','7','2019-01-07','01:37:38',NULL,NULL),
('33','7','9','2019-11-26','01:06:43',NULL,NULL),
('34','3','4','2019-11-19','01:49:50',NULL,NULL),
('35','5','7','2019-03-26','01:01:48',NULL,NULL),
('36','2','7','2019-02-01','01:08:43',NULL,NULL),
('37','1','10','2019-01-19','01:10:51',NULL,NULL),
('38','9','2','2019-10-27','01:47:45',NULL,NULL),
('39','9','8','2019-11-09','01:27:52',NULL,NULL),
('40','10','6','2019-09-15','01:06:23',NULL,NULL),
('41','9','8','2019-07-14','01:31:00',NULL,NULL),
('42','10','2','2019-01-06','01:41:40',NULL,NULL),
('43','9','6','2019-12-07','01:56:28',NULL,NULL),
('44','8','10','2019-02-15','01:49:53',NULL,NULL),
('45','6','2','2019-07-15','01:14:38',NULL,NULL),
('46','3','3','2019-10-01','01:16:23',NULL,NULL),
('47','1','1','2019-04-16','01:07:28',NULL,NULL),
('48','9','9','2019-11-24','01:40:40',NULL,NULL),
('49','9','7','2019-01-09','01:30:19',NULL,NULL),
('50','2','6','2019-07-21','01:06:27',NULL,NULL);



-- Таблица с возможными состояниями здоровья и рекомендациями для пользователя.

DROP TABLE IF EXISTS health_states;
CREATE TABLE health_states(
	id SERIAL,
	name VARCHAR(255),
	recomendations text	
);

INSERT INTO health_states (name, recomendations) VALUES
  ('ожирение', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('дефицит веса', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('гиподинамия', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('обезвоживание', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('дефицит сна', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('короткий REM-сон', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('тахикардия', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('брадикардия', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('резкое снижение веса', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('поздно ложитесь спать', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('истощение', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('короткий медленный сон', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('тяжелые физические нагрузки', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('недостаточное потребление жидкости', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.'),
  ('слишком длинный сон', 'Lorem ipsum dolor sit amet. Quos dolores et voluptates repudiandae sint.');
  

 
-- Таблица для накопления общих данных по разным показателям за всё время пользования приложением.
-- Данные содержат: общее количество шагов, общая дистанция (шаги + тренировки), общее количество сожжёных калорий, текущий индекс массы тела.
 
DROP TABLE IF EXISTS total_data; -- информация за всё время
CREATE TABLE total_data (
	user_id BIGINT UNSIGNED NOT NULL UNIQUE,
	update_at DATETIME DEFAULT NOW(),
	total_steps BIGINT UNSIGNED,
    total_distance BIGINT UNSIGNED,    
    total_calories BIGINT UNSIGNED,
    body_mass_index FLOAT UNSIGNED,    
    FOREIGN KEY (user_id) REFERENCES users(id)
);

INSERT INTO total_data (user_id, total_steps, total_distance, total_calories ) VALUES
	('1', 0, 0, 0),
	('2', 0, 0, 0),
	('3', 0, 0, 0),
	('4', 0, 0, 0),
	('5', 0, 0, 0),
	('6', 0, 0, 0),
	('7', 0, 0, 0),
	('8', 0, 0, 0),
	('9', 0, 0, 0),
	('10', 0, 0, 0);



-- Таблица для вывода текущего состояние здоровья пользователя. 
-- Данные формируются по запросу пользователя.
-- Внутренние функции расчитывают показатели и устанавливают соответствия с таблицей состояния и рекомендаций.

DROP TABLE IF EXISTS current_health_states;
CREATE TABLE current_health_states (
	user_id BIGINT UNSIGNED NOT NULL,
	update_at DATETIME DEFAULT NOW(),
	health_states_id BIGINT UNSIGNED NOT NULL,
	FOREIGN KEY (user_id) REFERENCES users(id),
	FOREIGN KEY (health_states_id) REFERENCES health_states(id)
);

INSERT INTO current_health_states (user_id, health_states_id) VALUES
	('1', '3'),
	('2', '5'),
	('3', '10'),
	('4', '12'),
	('5', '1'),
	('6', '1'),
	('7', '2'),
	('8', '4'),
	('10', '3'),
	('1', '4'),
	('3', '12'),
	('5', '13'),
	('6', '7'),
	('7', '9'),
	('8', '12'),
	('10', '12'),
	('1', '6'),
	('3', '7'),
	('5', '3'),
	('6', '6'),
	('7', '3');
	